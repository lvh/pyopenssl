language: python

os:
  - linux

env:
  matrix:
    # Supported environments:
    - TOX_ENV=pypy
    - TOX_ENV=py26
    - TOX_ENV=py27
    - TOX_ENV=py32
    - TOX_ENV=py33

    # Also run the tests against cryptography master.
    - TOX_ENV=pypy-cryptographymaster
    - TOX_ENV=py26-cryptographymaster
    - TOX_ENV=py27-cryptographymaster
    - TOX_ENV=py32-cryptographymaster
    - TOX_ENV=py33-cryptographymaster

    # Also run at least a little bit against an older version of OpenSSL.
    - TOX_ENV=py27 OPENSSL=0.9.8

matrix:
  allow_failures:
    # Let the cryptography master builds fail, because they might be
    # triggered by cryptography changes beyond our control.
    - env: TOX_ENV=pypy-cryptographymaster
    - env: TOX_ENV=py26-cryptographymaster
    - env: TOX_ENV=py27-cryptographymaster
    - env: TOX_ENV=py32-cryptographymaster
    - env: TOX_ENV=py33-cryptographymaster

    - env: OPENSSL=0.9.8

install:
  # In some builds, install an old version of OpenSSL.
  - |
    if [[ "${OPENSSL}" == "0.9.8" ]]; then
      sudo add-apt-repository "deb http://archive.ubuntu.com/ubuntu/ lucid main"
      sudo apt-get -y update
      sudo apt-get install -y --force-yes libssl-dev/lucid
    fi

  # Install the wheel library explicitly here.  It is not really a setup
  # dependency.  It is not an install dependency.  It is only a dependency for
  # the script directive below - because we want to exercise wheel building on
  # travis.
  - pip install wheel

  # Also install some tools for measuring code coverage and sending the results
  # to coveralls.
  - pip install coveralls coverage

script:
  - |
    pip install -e .
  - |
    coverage run --branch --source=OpenSSL setup.py bdist_wheel test
  - |
    coverage report -m
  - |
    python -c "import OpenSSL.SSL; print(OpenSSL.SSL.SSLeay_version(OpenSSL.SSL.SSLEAY_VERSION))"

after_success:
  - coveralls

notifications:
  email: false
